{
  "contractName": "UnknownPuzzle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ShifterRegistry",
          "name": "_registry",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_secretHash",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_rewardAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_secret",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "LogRewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_rewardAddress",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_secret",
          "type": "bytes"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_nHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "fund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract ShifterRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "secretHash",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_transferTo",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_secret",
          "type": "bytes"
        }
      ],
      "name": "validateSecret",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ShifterRegistry\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_secretHash\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_rewardAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_secret\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"name\":\"LogRewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_rewardAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_secret\",\"type\":\"bytes\"}],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_nHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"fund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract ShifterRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secretHash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_transferTo\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_secret\",\"type\":\"bytes\"}],\"name\":\"validateSecret\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"claimReward(bytes,bytes)\":{\"params\":{\"_rewardAddress\":\"The address that should receive the reward if the secret is correct.\",\"_secret\":\"The secret.\"}},\"fund(uint256,bytes32,bytes)\":{\"params\":{\"_amount\":\"The amount of token provided to the Darknodes in Sats.\",\"_nHash\":\"The hash of the nonce returned by the Darknodes.\",\"_sig\":\"The signature returned by the Darknodes.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(address,uint256,address)\":{\"params\":{\"_amount\":\"The amount to transfer\",\"_tokenAddress\":\"The address of the ERC20 token\",\"_transferTo\":\"The destination address to send ERC20 tokens to\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validateSecret(bytes)\":{\"params\":{\"_secret\":\"The secret.\"}}}},\"userdoc\":{\"methods\":{\"claimReward(bytes,bytes)\":{\"notice\":\"Allows someone to try and claim the reward by submitting the secret.\"},\"fund(uint256,bytes32,bytes)\":{\"notice\":\"Funds the contract with claimable rewards\"},\"rewardAmount()\":{\"notice\":\"The amount of reward for solving the puzzle\"},\"transfer(address,uint256,address)\":{\"notice\":\"Transfers tokens from the contract to reduce the amount of reward. \"},\"validateSecret(bytes)\":{\"notice\":\"Validate that the secret is correct. Use this function to         validate your answer if you think you've got it before         submitting a swap. You could also use this to brute-force         the answer too if you want. \"}}}},\"settings\":{\"compilationTarget\":{\"/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/SimplePuzzle.sol\":\"UnknownPuzzle\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/Puzzle.sol\":{\"keccak256\":\"0x2496b3941063c737e00eafa994c4c719d362a6e9fafcee4bcded91fba3b53b7c\",\"urls\":[\"bzz-raw://b927e2fb6cdf147884f52cb671d70fb08caa00554a76197547c9ae70b2fb9efe\",\"dweb:/ipfs/QmWhZBdPtbUVvNq1WeVhZ2F24Lt2UELhfgKr9JYweLS94h\"]},\"/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/SimplePuzzle.sol\":{\"keccak256\":\"0x11dbfcb08d962fa1925868b01fa3e98e449b0f1bbe10cbce3af97d77af4b1b56\",\"urls\":[\"bzz-raw://0a8dad171c9e5802768dc395f2c7aa0d906964b0f3c7eefafcc54290f10117d3\",\"dweb:/ipfs/QmaYXoJ5tidkwYxiczB18pPk6wPBMNaGzSWMZK1AfcNiG5\"]},\"darknode-sol/contracts/Shifter/ERC20Shifted.sol\":{\"keccak256\":\"0x0e01929c0fb8cf3092cb10260bfc400a72bd03ab9fdfea3cc7d81f9f16b7586e\",\"urls\":[\"bzz-raw://288d46173b673a55453860aa13c9c8523575db9ee6fb38b42d5524c8b5d501c8\",\"dweb:/ipfs/QmXiTN2LaXpx9NKC8UCRbejfpk8LQBTH7Etpcpm2tAj4wQ\"]},\"darknode-sol/contracts/Shifter/IShifter.sol\":{\"keccak256\":\"0x740aafb632845b8973686ba01adfa9f65df4fe7c77ce0d006fab1bf6f78a1672\",\"urls\":[\"bzz-raw://4d845d38aa35f768ee4b9669be315d4c66b72a20d9f54132b044fc87c806c440\",\"dweb:/ipfs/QmNc8ctKh8uAv3wPoc7DCggxKu6mji9aqzyBPFdcM7gZXQ\"]},\"darknode-sol/contracts/Shifter/ShifterRegistry.sol\":{\"keccak256\":\"0x150cfe77d76a198fb3ba0e643b981c00963722e7bac326ef371f9bdb6056d3b4\",\"urls\":[\"bzz-raw://c3a28205145b59f70457d0d9cff78203e692be06443b6f12b46b9d2a202a2fd1\",\"dweb:/ipfs/QmVBqG4vJmvMdgawepMp8F4AEzkgX6dwGLbvjZYCg9KVvf\"]},\"darknode-sol/contracts/libraries/Claimable.sol\":{\"keccak256\":\"0x3ee38bdec3647950a16cc17f932a941c6d1f4ed0e81fd65e420c97df0da2a209\",\"urls\":[\"bzz-raw://f276bf6825ea0d35d14b503fe04d8545bb1d751bbb6e1dde6d85a4217a4876dc\",\"dweb:/ipfs/QmQAYRdTcdGAQGKXdgxFw48cgXRCVzhBaHPxidFDuigwNB\"]},\"darknode-sol/contracts/libraries/Compare.sol\":{\"keccak256\":\"0xbe65523a30966cd5022cbfeccf2e7c1e6e58f4dafb1a72988dc79b763fc65a87\",\"urls\":[\"bzz-raw://06e42bfdc4b268f77a71544aaa6bf9b11520e1ff06ae8752368e23b4216a0cb2\",\"dweb:/ipfs/QmZ5QVbuzoc746LRqqZ1fz2TPoBUCgr3efsYY5UC8BHjay\"]},\"darknode-sol/contracts/libraries/LinkedList.sol\":{\"keccak256\":\"0xa3974361a940dc6142907cd17f7f44b9e792bd3b18e4b1afbccf883f08923dc7\",\"urls\":[\"bzz-raw://d5388ade21a47374219005ffbadeb658a7253b16599b4de8a83b205d0a0b44f2\",\"dweb:/ipfs/QmPbL1nmCNKGAHUSXHfh4CoKXFL645FxBRd1Qy8o1oofxq\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzz-raw://696a75bc2c55407ce8251ccc7d19ecb1b7b2be1796a160a6524312babcc7e3d4\",\"dweb:/ipfs/QmQViKEp3y99h9uhRssE29TmjBKRnFMaoz3eJZ4eggggg2\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzz-raw://45c0d95495b944fbb1aa09d900b0ab530903a432125ab8fddfa05064a7988991\",\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200153838038062001538833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b506040818152602092830151828201909152600482527f7a42544300000000000000000000000000000000000000000000000000000000928201929092529092508491508383838383836200014a6001600160e01b03620001ed16565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600580546001600160a01b0319166001600160a01b0386161790558251620001c2906002906020860190620001f2565b508151620001d8906001906020850190620001f2565b50600455506200029498505050505050505050565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023557805160ff191683800117855562000265565b8280016001018555821562000265579182015b828111156200026557825182559160200191906001019062000248565b506200027392915062000277565b5090565b620001ef91905b808211156200027357600081556001016200027e565b61129480620002a46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063d29e680311610066578063d29e68031461045d578063dbba0f0114610465578063f2fde38b1461049b578063f7b2a7be146104c1576100ea565b80638da5cb5b1461039d5780638f32d59b146103a5578063a9180d63146103ad576100ea565b8063695dfa40116100c8578063695dfa4014610250578063715018a6146102f45780637b103999146102fc5780637b61c32014610320576100ea565b806301221ce1146100ef57806301b62b781461021a5780633de39c1114610236575b600080fd5b6102186004803603604081101561010557600080fd5b810190602081018135600160201b81111561011f57600080fd5b82018360208201111561013157600080fd5b803590602001918460018302840111600160201b8311171561015257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156101a457600080fd5b8201836020820111156101b657600080fd5b803590602001918460018302840111600160201b831117156101d757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104c9945050505050565b005b6102226108a3565b604080519115158252519081900360200190f35b61023e6108ac565b60408051918252519081900360200190f35b6102226004803603602081101561026657600080fd5b810190602081018135600160201b81111561028057600080fd5b82018360208201111561029257600080fd5b803590602001918460018302840111600160201b831117156102b357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108b2945050505050565b6102186109fb565b610304610a9e565b604080516001600160a01b039092168252519081900360200190f35b610328610aad565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561036257818101518382015260200161034a565b50505050905090810190601f16801561038f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610304610b38565b610222610b47565b610218600480360360608110156103c357600080fd5b813591602081013591810190606081016040820135600160201b8111156103e957600080fd5b8201836020820111156103fb57600080fd5b803590602001918460018302840111600160201b8311171561041c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b6b945050505050565b610328610da5565b6102186004803603606081101561047b57600080fd5b506001600160a01b03813581169160208101359160409091013516610dff565b610218600480360360208110156104b157600080fd5b50356001600160a01b0316610eb8565b61023e610f1d565b6004543a1115610518576040805162461bcd60e51b81526020600482015260156024820152740cec2e640e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b604482015290519081900360640190fd5b60035460ff1615610569576040805162461bcd60e51b81526020600482015260166024820152751c995dd85c9908185b1c9958591e4818db185a5b595960521b604482015290519081900360640190fd5b610572816108b2565b6105b4576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081cd958dc995d60921b604482015290519081900360640190fd5b6003805460ff1916600117905560006105cb610f1d565b60055460405163092a29e360e41b8152602060048201908152600280546000196001821615610100020116819004602484018190529495506001600160a01b03909316936392a29e30939282916044909101908490801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b50509250505060206040518083038186803b15801561068b57600080fd5b505afa15801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b505160408051638723c37760e01b815260248101849052600481019182528551604482015285516001600160a01b0390931692638723c3779287928692829160640190602086019080838360005b8381101561071b578181015183820152602001610703565b50505050905090810190601f1680156107485780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561076857600080fd5b505af115801561077c573d6000803e3d6000fd5b505050506040513d602081101561079257600080fd5b505060408051908101829052606080825284519082015283517fc837ffe6c503d717692e6fb85fd88c05498e00abe7c67744c760d36dc7e4f7c4918591859185918190602082810191608084019188019080838360005b838110156108015781810151838201526020016107e9565b50505050905090810190601f16801561082e5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610861578181015183820152602001610849565b50505050905090810190601f16801561088e5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050565b60035460ff1681565b60045481565b6000606060026108c184611089565b6040518082805190602001908083835b602083106108f05780518252601f1990920191602091820191016108d1565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561092f573d6000803e3d6000fd5b5050506040513d602081101561094457600080fd5b50516040805160208082019390935281518082038401815260018054600281831615610100026000190190911604601f81018690049095028301606090810185529383018581529195506109f494869492939192909101828280156109ea5780601f106109bf576101008083540402835291602001916109ea565b820191906000526020600020905b8154815290600101906020018083116109cd57829003601f168201915b5050505050611117565b9392505050565b610a03610b47565b610a54576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050505081565b6000546001600160a01b031690565b600080546001600160a01b0316610b5c611195565b6001600160a01b031614905090565b60008311610bc0576040805162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206d7573742062652067726561746572207468616e2030000000604482015290519081900360640190fd5b60055460405163092a29e360e41b8152602060048201908152600280546000196001821615610100020116819004602484018190526001600160a01b03909416936392a29e3093919291829160449091019084908015610c615780601f10610c3657610100808354040283529160200191610c61565b820191906000526020600020905b815481529060010190602001808311610c4457829003601f168201915b50509250505060206040518083038186803b158015610c7f57600080fd5b505afa158015610c93573d6000803e3d6000fd5b505050506040513d6020811015610ca957600080fd5b5051604051632ed2876360e21b815260006004820181815260248301879052604483018690526080606484019081528551608485015285516001600160a01b039095169463bb4a1d8c948993899389939192909160a49091019060208501908083838b5b83811015610d25578181015183820152602001610d0d565b50505050905090810190601f168015610d525780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b505050506040513d6020811015610d9e57600080fd5b5050505050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b305780601f10610b0557610100808354040283529160200191610b30565b610e07610b47565b610e58576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610d7457600080fd5b610ec0610b47565b610f11576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610f1a81611199565b50565b60055460405163efa74f1f60e01b81526020600482019081526002805460001960018216156101000201168190046024840181905260009485946001600160a01b039091169363efa74f1f93929091829160449091019084908015610fc35780601f10610f9857610100808354040283529160200191610fc3565b820191906000526020600020905b815481529060010190602001808311610fa657829003601f168201915b50509250505060206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d602081101561100b57600080fd5b5051604080516370a0823160e01b815230600482015290519192506001600160a01b038316916370a0823191602480820192602092909190829003018186803b15801561105757600080fd5b505afa15801561106b573d6000803e3d6000fd5b505050506040513d602081101561108157600080fd5b505191505090565b6060816040516020018080660a6cac6e4cae8560cb1b81525060070182805190602001908083835b602083106110d05780518252601f1990920191602091820191016110b1565b6001836020036101000a03801982511681845116808217855250505050505090500180602960f81b8152506001019150506040516020818303038152906040529050919050565b6000815183511461112a5750600061118f565b60005b83518110156111895782818151811061114257fe5b602001015160f81c60f81b6001600160f81b03191684828151811061116357fe5b01602001516001600160f81b0319161461118157600091505061118f565b60010161112d565b50600190505b92915050565b3390565b6001600160a01b0381166111de5760405162461bcd60e51b815260040180806020018281038252602681526020018061123a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820411e46ea15e6d3ba4b222818cef1921c368c0efdfbf52165348515f3ac741a1b64736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063d29e680311610066578063d29e68031461045d578063dbba0f0114610465578063f2fde38b1461049b578063f7b2a7be146104c1576100ea565b80638da5cb5b1461039d5780638f32d59b146103a5578063a9180d63146103ad576100ea565b8063695dfa40116100c8578063695dfa4014610250578063715018a6146102f45780637b103999146102fc5780637b61c32014610320576100ea565b806301221ce1146100ef57806301b62b781461021a5780633de39c1114610236575b600080fd5b6102186004803603604081101561010557600080fd5b810190602081018135600160201b81111561011f57600080fd5b82018360208201111561013157600080fd5b803590602001918460018302840111600160201b8311171561015257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156101a457600080fd5b8201836020820111156101b657600080fd5b803590602001918460018302840111600160201b831117156101d757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104c9945050505050565b005b6102226108a3565b604080519115158252519081900360200190f35b61023e6108ac565b60408051918252519081900360200190f35b6102226004803603602081101561026657600080fd5b810190602081018135600160201b81111561028057600080fd5b82018360208201111561029257600080fd5b803590602001918460018302840111600160201b831117156102b357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108b2945050505050565b6102186109fb565b610304610a9e565b604080516001600160a01b039092168252519081900360200190f35b610328610aad565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561036257818101518382015260200161034a565b50505050905090810190601f16801561038f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610304610b38565b610222610b47565b610218600480360360608110156103c357600080fd5b813591602081013591810190606081016040820135600160201b8111156103e957600080fd5b8201836020820111156103fb57600080fd5b803590602001918460018302840111600160201b8311171561041c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b6b945050505050565b610328610da5565b6102186004803603606081101561047b57600080fd5b506001600160a01b03813581169160208101359160409091013516610dff565b610218600480360360208110156104b157600080fd5b50356001600160a01b0316610eb8565b61023e610f1d565b6004543a1115610518576040805162461bcd60e51b81526020600482015260156024820152740cec2e640e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b604482015290519081900360640190fd5b60035460ff1615610569576040805162461bcd60e51b81526020600482015260166024820152751c995dd85c9908185b1c9958591e4818db185a5b595960521b604482015290519081900360640190fd5b610572816108b2565b6105b4576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081cd958dc995d60921b604482015290519081900360640190fd5b6003805460ff1916600117905560006105cb610f1d565b60055460405163092a29e360e41b8152602060048201908152600280546000196001821615610100020116819004602484018190529495506001600160a01b03909316936392a29e30939282916044909101908490801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b50509250505060206040518083038186803b15801561068b57600080fd5b505afa15801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b505160408051638723c37760e01b815260248101849052600481019182528551604482015285516001600160a01b0390931692638723c3779287928692829160640190602086019080838360005b8381101561071b578181015183820152602001610703565b50505050905090810190601f1680156107485780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561076857600080fd5b505af115801561077c573d6000803e3d6000fd5b505050506040513d602081101561079257600080fd5b505060408051908101829052606080825284519082015283517fc837ffe6c503d717692e6fb85fd88c05498e00abe7c67744c760d36dc7e4f7c4918591859185918190602082810191608084019188019080838360005b838110156108015781810151838201526020016107e9565b50505050905090810190601f16801561082e5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610861578181015183820152602001610849565b50505050905090810190601f16801561088e5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050565b60035460ff1681565b60045481565b6000606060026108c184611089565b6040518082805190602001908083835b602083106108f05780518252601f1990920191602091820191016108d1565b51815160209384036101000a60001901801990921691161790526040519190930194509192505080830381855afa15801561092f573d6000803e3d6000fd5b5050506040513d602081101561094457600080fd5b50516040805160208082019390935281518082038401815260018054600281831615610100026000190190911604601f81018690049095028301606090810185529383018581529195506109f494869492939192909101828280156109ea5780601f106109bf576101008083540402835291602001916109ea565b820191906000526020600020905b8154815290600101906020018083116109cd57829003601f168201915b5050505050611117565b9392505050565b610a03610b47565b610a54576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050505081565b6000546001600160a01b031690565b600080546001600160a01b0316610b5c611195565b6001600160a01b031614905090565b60008311610bc0576040805162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206d7573742062652067726561746572207468616e2030000000604482015290519081900360640190fd5b60055460405163092a29e360e41b8152602060048201908152600280546000196001821615610100020116819004602484018190526001600160a01b03909416936392a29e3093919291829160449091019084908015610c615780601f10610c3657610100808354040283529160200191610c61565b820191906000526020600020905b815481529060010190602001808311610c4457829003601f168201915b50509250505060206040518083038186803b158015610c7f57600080fd5b505afa158015610c93573d6000803e3d6000fd5b505050506040513d6020811015610ca957600080fd5b5051604051632ed2876360e21b815260006004820181815260248301879052604483018690526080606484019081528551608485015285516001600160a01b039095169463bb4a1d8c948993899389939192909160a49091019060208501908083838b5b83811015610d25578181015183820152602001610d0d565b50505050905090810190601f168015610d525780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b505050506040513d6020811015610d9e57600080fd5b5050505050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b305780601f10610b0557610100808354040283529160200191610b30565b610e07610b47565b610e58576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b826001600160a01b031663a9059cbb82846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610d7457600080fd5b610ec0610b47565b610f11576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610f1a81611199565b50565b60055460405163efa74f1f60e01b81526020600482019081526002805460001960018216156101000201168190046024840181905260009485946001600160a01b039091169363efa74f1f93929091829160449091019084908015610fc35780601f10610f9857610100808354040283529160200191610fc3565b820191906000526020600020905b815481529060010190602001808311610fa657829003601f168201915b50509250505060206040518083038186803b158015610fe157600080fd5b505afa158015610ff5573d6000803e3d6000fd5b505050506040513d602081101561100b57600080fd5b5051604080516370a0823160e01b815230600482015290519192506001600160a01b038316916370a0823191602480820192602092909190829003018186803b15801561105757600080fd5b505afa15801561106b573d6000803e3d6000fd5b505050506040513d602081101561108157600080fd5b505191505090565b6060816040516020018080660a6cac6e4cae8560cb1b81525060070182805190602001908083835b602083106110d05780518252601f1990920191602091820191016110b1565b6001836020036101000a03801982511681845116808217855250505050505090500180602960f81b8152506001019150506040516020818303038152906040529050919050565b6000815183511461112a5750600061118f565b60005b83518110156111895782818151811061114257fe5b602001015160f81c60f81b6001600160f81b03191684828151811061116357fe5b01602001516001600160f81b0319161461118157600091505061118f565b60010161112d565b50600190505b92915050565b3390565b6001600160a01b0381166111de5760405162461bcd60e51b815260040180806020018281038252602681526020018061123a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820411e46ea15e6d3ba4b222818cef1921c368c0efdfbf52165348515f3ac741a1b64736f6c634300050c0032",
  "sourceMap": "1372:270:4:-;;;1417:223;8:9:-1;5:2;;;30:1;27;20:12;5:2;1417:223:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1417:223:4;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1417:223:4;;420:4:-1;411:14;;;;1417:223:4;;;;;411:14:-1;1417:223:4;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1417:223:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1417:223:4;;;;;;;;;384:259;;;;;;;;;;;;;;;;;1417:223;;-1:-1:-1;1563:9:4;;-1:-1:-1;1598:11:4;1417:223;1563:9;1417:223;1598:11;1417:223;707:12:21;-1:-1:-1;;;;;707:10:21;:12;:::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:21;-1:-1:-1;;;;;698:21:21;;;;;;;734:40;;767:6;;;734:40;;698:6;;734:40;1384:8:2;:20;;-1:-1:-1;;;;;;1384:20:2;-1:-1:-1;;;;;1384:20:2;;;;;1414:26;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;1450:24:2;;;;:10;;:24;;;;;:::i;:::-;-1:-1:-1;1484:11:2;:26;-1:-1:-1;1372:270:4;;-1:-1:-1;;;;;;;;;1372:270:4;788:96:18;867:10;788:96;;:::o;1372:270:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1372:270:4;;;-1:-1:-1;1372:270:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1372:270:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1372:270:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:500;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;868:500:4;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;868:500:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;868:500:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;868:500:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;868:500:4;;;;;;;;-1:-1:-1;868:500:4;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;868:500:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;868:500:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;868:500:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;868:500:4;;-1:-1:-1;868:500:4;;-1:-1:-1;;;;;868:500:4:i;:::-;;623:25:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;702:26;;;:::i;:::-;;;;;;;;;;;;;;;;3080:206;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3080:206:2;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3080:206:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3080:206:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3080:206:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3080:206:2;;-1:-1:-1;3080:206:2;;-1:-1:-1;;;;;3080:206:2:i;1642:137:21:-;;;:::i;779:31:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;779:31:2;;;;;;;;;;;;;;556:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;556:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:77:21;;;:::i;1208:92::-;;;:::i;2034:289:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2034:289:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2034:289:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2034:289:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2034:289:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2034:289:2;;-1:-1:-1;2034:289:2;;-1:-1:-1;;;;;2034:289:2:i;497:23::-;;;:::i;2602:166::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2602:166:2;;;;;;;;;;;;;;;;;:::i;1928:107:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1928:107:21;-1:-1:-1;;;;;1928:107:21;;:::i;1583:177:2:-;;;:::i;868:500:4:-;881:11:2;;866;:26;;858:60;;;;;-1:-1:-1;;;858:60:2;;;;;;;;;;;;-1:-1:-1;;;858:60:2;;;;;;;;;;;;;;;986:13:4;;;;985:14;977:49;;;;;-1:-1:-1;;;977:49:4;;;;;;;;;;;;-1:-1:-1;;;977:49:4;;;;;;;;;;;;;;;1044:23;1059:7;1044:14;:23::i;:::-;1036:50;;;;;-1:-1:-1;;;1036:50:4;;;;;;;;;;;;-1:-1:-1;;;1036:50:4;;;;;;;;;;;;;;;1096:13;:20;;-1:-1:-1;;1096:20:4;1112:4;1096:20;;;:13;1143:14;:12;:14::i;:::-;1223:8;;:40;;-1:-1:-1;;;1223:40:4;;;;;;;;;1251:11;1223:40;;-1:-1:-1;;1223:8:4;:40;;;:8;:40;;;;;;;;;;;;1126:31;;-1:-1:-1;;;;;;1223:8:4;;;;:27;;1251:11;1223:40;;;;;;;1251:11;;1223:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:40:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1223:40:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1223:40:4;:73;;;-1:-1:-1;;;1223:73:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1223:49:4;;;;;;1273:14;;1289:6;;1223:73;;;;;:40;:73;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1223:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:73:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1223:73:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1312:49:4;;;;;;;;;;;;;;;;;;;;;;;1329:14;;1345:7;;1354:6;;1312:49;;1223:73;1312:49;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1312:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1312:49:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1312:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:1:2;868:500:4;;:::o;623:25:2:-;;;;;;:::o;702:26::-;;;;:::o;3080:206::-;3147:4;3163:14;3197:31;3204:23;3219:7;3204:14;:23::i;:::-;3197:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3197:31:2;;;;;;;-1:-1:-1;263:2;;-1:-1;;3197:31:2;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3197:31:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3197:31:2;3180:49;;;3197:31;3180:49;;;;;;;;;26:21:-1;;;22:32;;6:49;;3268:10:2;3246:33;;;;;;;;;-1:-1:-1;;3246:33:2;;;;;;;;;;;;;;;;;;;;;;3180:49;;;3246:33;;;3180:49;;-1:-1:-1;3246:33:2;;3180:49;;;;3268:10;;3246:33;;;3268:10;3246:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:33::i;:::-;3239:40;3080:206;-1:-1:-1;;;3080:206:2:o;1642:137:21:-;1061:9;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;1053:54:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:1;1724:6;;1703:40;;-1:-1:-1;;;;;1724:6:21;;;;1703:40;;1740:1;;1703:40;1770:1;1753:19;;-1:-1:-1;;;;;;1753:19:21;;;1642:137::o;779:31:2:-;;;-1:-1:-1;;;;;779:31:2;;:::o;556:25::-;;;;;;;;;;;;;;-1:-1:-1;;556:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;857:77:21:-;895:7;921:6;-1:-1:-1;;;;;921:6:21;857:77;:::o;1208:92::-;1248:4;1287:6;;-1:-1:-1;;;;;1287:6:21;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:21;;1264:29;;1208:92;:::o;2034:289:2:-;2195:1;2185:7;:11;2177:53;;;;;-1:-1:-1;;;2177:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:8;;:40;;-1:-1:-1;;;2240:40:2;;;;;;;;;2268:11;2240:40;;-1:-1:-1;;2240:8:2;:40;;;:8;:40;;;;;;;;;;;;-1:-1:-1;;;;;2240:8:2;;;;:27;;2268:11;;2240:40;;;;;;;;2268:11;;2240:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2240:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2240:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2240:40:2;:76;;-1:-1:-1;;;2240:76:2;;2289:3;2240:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2240:48:2;;;;;;2294:7;;2303:6;;2311:4;;2240:76;;;;;;;;;:40;:76;;;;;;2289:3;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2240:76:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2240:76:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2240:76:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2034:289:2:o;497:23::-;;;;;;;;;;;;;;;-1:-1:-1;;497:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:166;1061:9:21;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;1053:54:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:13:2;-1:-1:-1;;;;;2710:29:2;;2740:11;2753:7;2710:51;;;;;;;;;;;;;-1:-1:-1;;;;;2710:51:2;-1:-1:-1;;;;;2710:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1928:107:21;1061:9;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;1053:54:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;1583:177:2:-;1667:8;;:38;;-1:-1:-1;;;1667:38:2;;;;;;;;;1693:11;1667:38;;-1:-1:-1;;1667:8:2;:38;;;:8;:38;;;;;;;;;;;;1628:7;;;;-1:-1:-1;;;;;1667:8:2;;;;:25;;1693:11;1667:38;;;;;;;;;1693:11;;1667:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1667:38:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1667:38:2;1723:30;;;-1:-1:-1;;;1723:30:2;;1747:4;1723:30;;;;;;1667:38;;-1:-1:-1;;;;;;1723:15:2;;;;;:30;;;;;1667:38;;1723:30;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;1723:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1723:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1723:30:2;;-1:-1:-1;;1583:177:2;:::o;3292:190::-;3361:12;3440:7;3392:83;;;;;;-1:-1:-1;;;3392:83:2;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3392:83:2;;;;;;;-1:-1:-1;;;3392:83:2;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3392:83:2;;;3385:90;;3292:190;;;:::o;49:314:15:-;124:4;156:1;:8;144:1;:8;:20;140:63;;-1:-1:-1;187:5:15;180:12;;140:63;217:6;212:124;233:1;:8;229:1;:12;212:124;;;275:1;277;275:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;267:12:15;;:1;269;267:4;;;;;;;;;;;;-1:-1:-1;;;;;;267:4:15;:12;263:63;;306:5;299:12;;;;;263:63;243:4;;212:124;;;;352:4;345:11;;49:314;;;;;:::o;788:96:18:-;867:10;788:96;:::o;2136:225:21:-;-1:-1:-1;;;;;2209:22:21;;2201:73;;;;-1:-1:-1;;;2201:73:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:6;;;2289:38;;-1:-1:-1;;;;;2289:38:21;;;;2310:6;;;2289:38;;;2337:6;:17;;-1:-1:-1;;;;;;2337:17:21;-1:-1:-1;;;;;2337:17:21;;;;;;;;;;2136:225::o",
  "source": "pragma solidity ^0.5.12;\n\nimport \"./Puzzle.sol\";\n\nimport \"darknode-sol/contracts/Shifter/ShifterRegistry.sol\";\n\ncontract SimplePuzzle is Puzzle {\n    /// @param _registry The Shifter registry contract address\n    /// @param _tokenSymbol The token symbol for the reward and the shifting\n    /// @param _secretHash The secret hash\n    /* solium-disable-next-line no-empty-blocks */\n    constructor(\n        ShifterRegistry _registry,\n        string memory _tokenSymbol,\n        bytes memory _secretHash,\n        uint256 _maxGasPrice\n    ) public Puzzle(\n        _registry,\n        _tokenSymbol,\n        _secretHash,\n        _maxGasPrice\n    ) {}\n\n    /// @notice Allows someone to try and claim the reward by submitting the secret.\n    /// @param _rewardAddress The address that should receive the reward if the secret is correct.\n    /// @param _secret The secret.\n    function claimReward(bytes memory _rewardAddress, bytes memory _secret) public onlyNotFrontRunning {\n        require(!rewardClaimed, \"reward already claimed\");\n        require(validateSecret(_secret), \"invalid secret\");\n        rewardClaimed = true;\n        uint256 amount = rewardAmount();\n        // Shift out the funds to the specified address\n        registry.getShifterBySymbol(tokenSymbol).shiftOut(_rewardAddress, amount);\n\n        emit LogRewardClaimed(_rewardAddress, _secret, amount);\n    }\n}\n\ncontract UnknownPuzzle is SimplePuzzle {\n    constructor(\n        ShifterRegistry _registry,\n        bytes memory _secretHash,\n        uint256 _maxGasPrice\n    ) public SimplePuzzle(\n        _registry,\n        \"zBTC\",\n        _secretHash,\n        _maxGasPrice\n    ) {}\n}",
  "sourcePath": "/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/SimplePuzzle.sol",
  "ast": {
    "absolutePath": "/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/SimplePuzzle.sol",
    "exportedSymbols": {
      "SimplePuzzle": [
        785
      ],
      "UnknownPuzzle": [
        804
      ]
    },
    "id": 805,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 714,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/Puzzle.sol",
        "file": "./Puzzle.sol",
        "id": 715,
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 581,
        "src": "26:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "darknode-sol/contracts/Shifter/ShifterRegistry.sol",
        "file": "darknode-sol/contracts/Shifter/ShifterRegistry.sol",
        "id": 716,
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 3935,
        "src": "50:60:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 717,
              "name": "Puzzle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 580,
              "src": "137:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Puzzle_$580",
                "typeString": "contract Puzzle"
              }
            },
            "id": 718,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:4"
          }
        ],
        "contractDependencies": [
          580,
          4858,
          5239
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 785,
        "linearizedBaseContracts": [
          785,
          580,
          5239,
          4858
        ],
        "name": "SimplePuzzle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "641:2:4",
              "statements": []
            },
            "documentation": "@param _registry The Shifter registry contract address\n @param _tokenSymbol The token symbol for the reward and the shifting\n @param _secretHash The secret hash",
            "id": 736,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 729,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 720,
                    "src": "560:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 730,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 722,
                    "src": "579:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 731,
                    "name": "_secretHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "601:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 732,
                    "name": "_maxGasPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 726,
                    "src": "622:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 733,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 728,
                  "name": "Puzzle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 580,
                  "src": "544:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Puzzle_$580_$",
                    "typeString": "type(contract Puzzle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "544:96:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "405:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                    "typeString": "contract ShifterRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 719,
                    "name": "ShifterRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3934,
                    "src": "405:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 722,
                  "name": "_tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "440:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "name": "_secretHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "476:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "name": "_maxGasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "510:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:141:4"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:0:4"
            },
            "scope": 785,
            "src": "384:259:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "967:401:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "985:14:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 746,
                          "name": "rewardClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "986:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72657761726420616c726561647920636c61696d6564",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:24:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd5732e3fabae4380b82b177a141d95d2c717ae2c95a2c5be3b639386aff2f95",
                          "typeString": "literal_string \"reward already claimed\""
                        },
                        "value": "reward already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd5732e3fabae4380b82b177a141d95d2c717ae2c95a2c5be3b639386aff2f95",
                          "typeString": "literal_string \"reward already claimed\""
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6084,
                        6085
                      ],
                      "referencedDeclaration": 6085,
                      "src": "977:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "977:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 753,
                            "name": "_secret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "1059:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 752,
                          "name": "validateSecret",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "1044:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view returns (bool)"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1044:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c696420736563726574",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fae93b74b877ade8364d1b3037a7c56b5e4159cd21e47a9d01abaaea7857c9e",
                          "typeString": "literal_string \"invalid secret\""
                        },
                        "value": "invalid secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fae93b74b877ade8364d1b3037a7c56b5e4159cd21e47a9d01abaaea7857c9e",
                          "typeString": "literal_string \"invalid secret\""
                        }
                      ],
                      "id": 751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6084,
                        6085
                      ],
                      "referencedDeclaration": 6085,
                      "src": "1036:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:50:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 758,
                      "name": "rewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "1096:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1112:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1096:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:20:4"
                },
                {
                  "assignments": [
                    763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 763,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 783,
                      "src": "1126:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1126:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 764,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "1143:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1126:31:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "_rewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "1273:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1289:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 412,
                            "src": "1251:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 767,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1223:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                              "typeString": "contract ShifterRegistry"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getShifterBySymbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3921,
                          "src": "1223:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_contract$_IShifter_$2850_$",
                            "typeString": "function (string memory) view external returns (contract IShifter)"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1223:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IShifter_$2850",
                          "typeString": "contract IShifter"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shiftOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2839,
                      "src": "1223:49:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:73:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:73:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "_rewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "1329:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 779,
                        "name": "_secret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "1345:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1354:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 777,
                      "name": "LogRewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "1312:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "EmitStatement",
                  "src": "1307:54:4"
                }
              ]
            },
            "documentation": "@notice Allows someone to try and claim the reward by submitting the secret.\n @param _rewardAddress The address that should receive the reward if the secret is correct.\n @param _secret The secret.",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 743,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 742,
                  "name": "onlyNotFrontRunning",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 430,
                  "src": "947:19:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:19:4"
              }
            ],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "name": "_rewardAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "889:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "name": "_secret",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "918:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "888:51:4"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:4"
            },
            "scope": 785,
            "src": "868:500:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 805,
        "src": "112:1258:4"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 786,
              "name": "SimplePuzzle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 785,
              "src": "1398:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimplePuzzle_$785",
                "typeString": "contract SimplePuzzle"
              }
            },
            "id": 787,
            "nodeType": "InheritanceSpecifier",
            "src": "1398:12:4"
          }
        ],
        "contractDependencies": [
          580,
          785,
          4858,
          5239
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 804,
        "linearizedBaseContracts": [
          804,
          785,
          580,
          5239,
          4858
        ],
        "name": "UnknownPuzzle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "1638:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 796,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 789,
                    "src": "1563:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "7a425443",
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1582:6:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ed741460db96bfd5490e8b3fec6c7aacf0938024b0827570bed736021bc82885",
                      "typeString": "literal_string \"zBTC\""
                    },
                    "value": "zBTC"
                  },
                  {
                    "argumentTypes": null,
                    "id": 798,
                    "name": "_secretHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 791,
                    "src": "1598:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 799,
                    "name": "_maxGasPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 793,
                    "src": "1619:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 800,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 795,
                  "name": "SimplePuzzle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 785,
                  "src": "1541:12:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SimplePuzzle_$785_$",
                    "typeString": "type(contract SimplePuzzle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1541:96:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1438:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                    "typeString": "contract ShifterRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 788,
                    "name": "ShifterRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3934,
                    "src": "1438:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "_secretHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1473:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "_maxGasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1507:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1428:105:4"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:4"
            },
            "scope": 804,
            "src": "1417:223:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 805,
        "src": "1372:270:4"
      }
    ],
    "src": "0:1642:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/SimplePuzzle.sol",
    "exportedSymbols": {
      "SimplePuzzle": [
        785
      ],
      "UnknownPuzzle": [
        804
      ]
    },
    "id": 805,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 714,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/vince/Documents/renproject/git/renvm-demo/ethereum-contracts/contracts/ChaosnetChallenges/Puzzle.sol",
        "file": "./Puzzle.sol",
        "id": 715,
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 581,
        "src": "26:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "darknode-sol/contracts/Shifter/ShifterRegistry.sol",
        "file": "darknode-sol/contracts/Shifter/ShifterRegistry.sol",
        "id": 716,
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 3935,
        "src": "50:60:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 717,
              "name": "Puzzle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 580,
              "src": "137:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Puzzle_$580",
                "typeString": "contract Puzzle"
              }
            },
            "id": 718,
            "nodeType": "InheritanceSpecifier",
            "src": "137:6:4"
          }
        ],
        "contractDependencies": [
          580,
          4858,
          5239
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 785,
        "linearizedBaseContracts": [
          785,
          580,
          5239,
          4858
        ],
        "name": "SimplePuzzle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "641:2:4",
              "statements": []
            },
            "documentation": "@param _registry The Shifter registry contract address\n @param _tokenSymbol The token symbol for the reward and the shifting\n @param _secretHash The secret hash",
            "id": 736,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 729,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 720,
                    "src": "560:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 730,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 722,
                    "src": "579:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 731,
                    "name": "_secretHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "601:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 732,
                    "name": "_maxGasPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 726,
                    "src": "622:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 733,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 728,
                  "name": "Puzzle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 580,
                  "src": "544:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Puzzle_$580_$",
                    "typeString": "type(contract Puzzle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "544:96:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "405:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                    "typeString": "contract ShifterRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 719,
                    "name": "ShifterRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3934,
                    "src": "405:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 722,
                  "name": "_tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "440:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "name": "_secretHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "476:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "name": "_maxGasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "510:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:141:4"
            },
            "returnParameters": {
              "id": 734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:0:4"
            },
            "scope": 785,
            "src": "384:259:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "967:401:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "985:14:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 746,
                          "name": "rewardClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "986:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72657761726420616c726561647920636c61696d6564",
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:24:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd5732e3fabae4380b82b177a141d95d2c717ae2c95a2c5be3b639386aff2f95",
                          "typeString": "literal_string \"reward already claimed\""
                        },
                        "value": "reward already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd5732e3fabae4380b82b177a141d95d2c717ae2c95a2c5be3b639386aff2f95",
                          "typeString": "literal_string \"reward already claimed\""
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6084,
                        6085
                      ],
                      "referencedDeclaration": 6085,
                      "src": "977:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "977:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 753,
                            "name": "_secret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "1059:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 752,
                          "name": "validateSecret",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "1044:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view returns (bool)"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1044:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c696420736563726574",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:16:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fae93b74b877ade8364d1b3037a7c56b5e4159cd21e47a9d01abaaea7857c9e",
                          "typeString": "literal_string \"invalid secret\""
                        },
                        "value": "invalid secret"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fae93b74b877ade8364d1b3037a7c56b5e4159cd21e47a9d01abaaea7857c9e",
                          "typeString": "literal_string \"invalid secret\""
                        }
                      ],
                      "id": 751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6084,
                        6085
                      ],
                      "referencedDeclaration": 6085,
                      "src": "1036:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:50:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 758,
                      "name": "rewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "1096:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1112:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1096:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:20:4"
                },
                {
                  "assignments": [
                    763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 763,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 783,
                      "src": "1126:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1126:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 764,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "1143:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1126:31:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "_rewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "1273:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1289:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 412,
                            "src": "1251:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 767,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1223:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                              "typeString": "contract ShifterRegistry"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getShifterBySymbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3921,
                          "src": "1223:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_contract$_IShifter_$2850_$",
                            "typeString": "function (string memory) view external returns (contract IShifter)"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1223:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IShifter_$2850",
                          "typeString": "contract IShifter"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shiftOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2839,
                      "src": "1223:49:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:73:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:73:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "_rewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "1329:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 779,
                        "name": "_secret",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "1345:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1354:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 777,
                      "name": "LogRewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "1312:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "EmitStatement",
                  "src": "1307:54:4"
                }
              ]
            },
            "documentation": "@notice Allows someone to try and claim the reward by submitting the secret.\n @param _rewardAddress The address that should receive the reward if the secret is correct.\n @param _secret The secret.",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 743,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 742,
                  "name": "onlyNotFrontRunning",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 430,
                  "src": "947:19:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "947:19:4"
              }
            ],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "name": "_rewardAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "889:27:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "name": "_secret",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "918:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "888:51:4"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:4"
            },
            "scope": 785,
            "src": "868:500:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 805,
        "src": "112:1258:4"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 786,
              "name": "SimplePuzzle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 785,
              "src": "1398:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimplePuzzle_$785",
                "typeString": "contract SimplePuzzle"
              }
            },
            "id": 787,
            "nodeType": "InheritanceSpecifier",
            "src": "1398:12:4"
          }
        ],
        "contractDependencies": [
          580,
          785,
          4858,
          5239
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 804,
        "linearizedBaseContracts": [
          804,
          785,
          580,
          5239,
          4858
        ],
        "name": "UnknownPuzzle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "1638:2:4",
              "statements": []
            },
            "documentation": null,
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 796,
                    "name": "_registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 789,
                    "src": "1563:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "7a425443",
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1582:6:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ed741460db96bfd5490e8b3fec6c7aacf0938024b0827570bed736021bc82885",
                      "typeString": "literal_string \"zBTC\""
                    },
                    "value": "zBTC"
                  },
                  {
                    "argumentTypes": null,
                    "id": 798,
                    "name": "_secretHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 791,
                    "src": "1598:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 799,
                    "name": "_maxGasPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 793,
                    "src": "1619:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 800,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 795,
                  "name": "SimplePuzzle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 785,
                  "src": "1541:12:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SimplePuzzle_$785_$",
                    "typeString": "type(contract SimplePuzzle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1541:96:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1438:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                    "typeString": "contract ShifterRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 788,
                    "name": "ShifterRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3934,
                    "src": "1438:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ShifterRegistry_$3934",
                      "typeString": "contract ShifterRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "_secretHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1473:24:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "_maxGasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1507:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1428:105:4"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:4"
            },
            "scope": 804,
            "src": "1417:223:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 805,
        "src": "1372:270:4"
      }
    ],
    "src": "0:1642:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0xc837ffe6c503d717692e6fb85fd88c05498e00abe7c67744c760d36dc7e4f7c4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_rewardAddress",
              "type": "bytes"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_secret",
              "type": "bytes"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_rewardAmount",
              "type": "uint256"
            }
          ],
          "name": "LogRewardClaimed",
          "type": "event",
          "signature": "0xc837ffe6c503d717692e6fb85fd88c05498e00abe7c67744c760d36dc7e4f7c4"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x388969a4178914940e92AAF3271909c5606b8272",
      "transactionHash": "0xbc71ba0704d08a01a65b7dc0fec683402ab64c5e555931d74547aaa788285b10"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-23T04:45:55.603Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "claimReward(bytes,bytes)": {
        "params": {
          "_rewardAddress": "The address that should receive the reward if the secret is correct.",
          "_secret": "The secret."
        }
      },
      "fund(uint256,bytes32,bytes)": {
        "params": {
          "_amount": "The amount of token provided to the Darknodes in Sats.",
          "_nHash": "The hash of the nonce returned by the Darknodes.",
          "_sig": "The signature returned by the Darknodes."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transfer(address,uint256,address)": {
        "params": {
          "_amount": "The amount to transfer",
          "_tokenAddress": "The address of the ERC20 token",
          "_transferTo": "The destination address to send ERC20 tokens to"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validateSecret(bytes)": {
        "params": {
          "_secret": "The secret."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "claimReward(bytes,bytes)": {
        "notice": "Allows someone to try and claim the reward by submitting the secret."
      },
      "fund(uint256,bytes32,bytes)": {
        "notice": "Funds the contract with claimable rewards"
      },
      "rewardAmount()": {
        "notice": "The amount of reward for solving the puzzle"
      },
      "transfer(address,uint256,address)": {
        "notice": "Transfers tokens from the contract to reduce the amount of reward. "
      },
      "validateSecret(bytes)": {
        "notice": "Validate that the secret is correct. Use this function to         validate your answer if you think you've got it before         submitting a swap. You could also use this to brute-force         the answer too if you want. "
      }
    }
  }
}